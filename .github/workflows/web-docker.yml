name: Web Pipeline

on:
  push:
    branches: 
      - master
    tags:
      - 'v*'
  pull_request:
    branches: [ master, develop ]
    types: [ opened, closed ]

env:
  PR_NUMBER: ${{ github.event.pull_request.number }}
  ENV: "stg"
  ARGOCD-FILE: "values-staging.yaml"

jobs:
  main:
    runs-on: ubuntu-latest    
    name: Web build docker
    steps:
      - if: github.ref != 'refs/heads/develop'
        uses: actions/checkout@v2
        with:
          ref: develop
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100

      - if: github.ref != 'refs/heads/develop'
        run: git branch develop origin/develop

      - name: Log in to dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Extract metadata for docker
        if: |
          github.event_name == 'push' ||
          startsWith(github.ref, 'refs/tags/v') ||
          github.event_name == 'pull_request' && github.event.action == 'opened'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: aeternity/superhero-ui-web
          tags: |
            type=raw,value=latest,enable=${{ endsWith(GitHub.ref, 'main') }}
            type=ref,event=tag
            type=ref,event=pr
          flavor: |
            latest=false
      
      - name: Build and push docker image
        if: |
          github.event_name == 'push' ||
          startsWith(github.ref, 'refs/tags/v') ||
          github.event_name == 'pull_request' && github.event.action == 'opened'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.web
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - uses: actions/checkout@v2
        with:
          repository: aeternity/gitops-apps.git
          ref: staging
          persist-credentials: false
          fetch-depth: 0

      - name: Staging deploy
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        uses: aeternity/ae-github-actions/argocd-deploy@v1
        with:
          url-prefix: pr-${{ env.PR_NUMBER }}
          env: ${{ env.ENV }}
          argocd-file: ${{ env.ARGOCD-FILE }}

      - name: Staging undeploy
        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        uses: aeternity/ae-github-actions/argocd-undeploy@v1
        with:
          url-prefix: pr-${{ env.PR_NUMBER }}
          env: ${{ env.ENV }}
          argocd-file: ${{ env.ARGOCD-FILE }}

      - name: Get the tag version
        if: startsWith(github.ref, 'refs/tags/v')
        id: get_version
        run: echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}

      - name: Production Deploy
        if: startsWith(github.ref, 'refs/tags/v')
        uses: aeternity/ae-github-actions/argocd-deploy@v1
        with:
          url-prefix: ${{ steps.get_version.outputs.TAG }}
          env: "prd"
          argocd-file: "values.yaml"

      - name: Print PR url
        uses: unsplash/comment-on-pr@v1.3.0
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: Deployed to pr-${{ env.PR_NUMBER }}.${{ env.ENV }}.aepps.com
          check_for_duplicate_msg: true
